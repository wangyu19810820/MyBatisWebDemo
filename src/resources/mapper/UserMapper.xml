<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserMapper">


    <!-- 获取数据库自增主键，需要指定useGeneratedKeys和keyProperty -->
    <!-- #{xxx}，${xxx}，前一种自动转义，后一种直接拼接 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into USER (name) values (#{name})
    </insert>

    <select id="selectAll" resultType="com.model.User">
        select * from USER
    </select>


    <!-- 鉴别器 -->
    <resultMap id="studentResultMap" type="com.model.User" autoMapping="false">
        <id column="id" property="id"></id>
        <result column="studentnumber" property="studentNumber"></result>
    </resultMap>

    <resultMap id="defaultResultMap" type="com.model.User" autoMapping="false">
        <id column="id" property="id"></id>
        <result column="name" property="name"></result>

        <!-- 单条sql查询所有内容，组装一对一，一对多，分页查询会有数量bug -->
        <!-- 一对一，columnPrefix指定映射前缀 -->
        <association property="college" columnPrefix="c_"
                     resultMap="com.dao.CollegeMapper.defaultResultMap">
        </association>

        <!-- 一对多 -->
        <collection property="scoreList" columnPrefix="s_"
                    ofType="com.model.Score">
            <id property="id" column="id"></id>
            <result property="name" column="name"></result>
            <result property="score" column="score"></result>
        </collection>

        <!-- 鉴别器 -->
        <discriminator javaType="_int" column="usertype">
            <!-- 匹配后整体应用新映射 -->
            <case value="0" resultMap="studentResultMap">
            </case>
            <!-- 匹配后结合使用原映射和新映射 -->
            <case value="1" resultType="com.model.User">
                <result column="name" property="otherName"></result>
                <result column="teachernumber" property="teacherNumber"></result>
            </case>
            <!-- 未能匹配，则应用原映射 -->
        </discriminator>

    </resultMap>

    <!-- 新增教师 -->
    <insert id="insertTeacher" useGeneratedKeys="true" keyProperty="id">
        insert into USER (NAME, USERTYPE, TEACHERNUMBER) values (#{name}, #{userType}, #{teacherNumber})
    </insert>

    <!-- 新增学生 -->
    <insert id="insertStudent" useGeneratedKeys="true" keyProperty="id">
        insert into USER (NAME, USERTYPE, STUDENTNUMBER) values (#{name}, #{userType}, #{studentNumber})
    </insert>

    <!-- 选择所有用户，应用鉴别器 -->
    <select id="selectAllUser" resultMap="defaultResultMap">
        select ID, NAME, USERTYPE, STUDENTNUMBER, TEACHERNUMBER from USER
    </select>


    <!-- 新增用户包含所属学院 -->
    <insert id="insertUserAndCollege" useGeneratedKeys="true" keyProperty="id">
        insert into USER (NAME, COLLEGEID) values (#{name}, #{college.id})
    </insert>

    <!-- 查询用户及所属学院信息，包含一对一映射 -->
    <select id="selectUserAndCollege" resultMap="defaultResultMap">
        select u.ID, u.NAME, u.USERTYPE, c.ID C_ID, c.NAME C_NAME from USER u
        join COLLEGE c on u.COLLEGEID = c.id
    </select>

    <!-- 查询用户及所属学院、成绩信息，包含一对一，一对多映射，分页时有数量bug -->
    <select id="selectUserAndCollegeScore" resultMap="defaultResultMap">
        select u.ID, u.NAME, u.USERTYPE,
        c.ID C_ID, c.NAME C_NAME,
        s.ID S_ID, s.NAME S_NAME, s.SCORE S_SCORE
        from USER u
        left join COLLEGE c on u.COLLEGEID = c.id
        left join SCORE s on u.ID = s.USERID
    </select>

    <!-- 多条sql，分步查询组装一对一，一对多映射，分页查询无数量bug -->
    <resultMap id="defaultResultMap1" type="com.model.User" autoMapping="false">
        <id column="id" property="id"></id>
        <result column="name" property="name"></result>

        <!-- 一对一 -->
        <association fetchType="eager" property="college" column="COLLEGEID"
                     select="com.dao.CollegeMapper.selectCollegeById">
        </association>

        <!-- 一对多 -->
        <collection fetchType="lazy" property="scoreList" column="id"
                    ofType="com.model.Score"
                    select="com.dao.ScoreMapper.selectScoreByUserId">
        </collection>

    </resultMap>

    <!-- 查询用户及所属学院信息，采用多条sql完成一对一和一对多映射 -->
    <select id="selectUserAndCollegeScoreByLazy" resultMap="defaultResultMap1">
        select u.ID, u.NAME, u.USERTYPE, u.COLLEGEID from USER u
    </select>

    <!-- 分页和一对多结合使用的时候，有结果数目不正确的问题 -->
    <!-- 通过变换sql写法，将分页参数传入xml中，解决分页数量不正确的问题 -->
    <select id="selectUserAndCollegeScoreByPage" resultMap="defaultResultMap">
        select u.ID, u.NAME, u.USERTYPE,
        c.ID C_ID, c.NAME C_NAME,
        s.ID S_ID, s.NAME S_NAME, s.SCORE S_SCORE
        from USER u
        left join COLLEGE c on u.COLLEGEID = c.id
        left join SCORE s on u.ID = s.USERID
        where u.ID in (select ID from USER limit #{pageSize} offset #{pageSize} * #{pageNumber})
    </select>

</mapper>